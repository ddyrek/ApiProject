@page "/customers"

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Customers</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active">Custmers</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

@if (CustomerList == null && !CustomerList.Any())
{
    <p>Loading...</p>
}
else
{
    <!-- Main content -->
    <section class="content">

        <!-- Default box -->
    <div class="card">
            <div class="card-header">
                <h3 class="card-title">Customers</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <table class="table table-striped projects">
                    <thead>
                        <tr>
                            <th style="width: 1%">
                                #
                            </th>
                            <th style="width: 20%">
                                Title
                            </th>
                            <th style="width: 30%">
                                Accounts
                            </th>
                            <th>
                                Scheduled Date
                            </th>
                            <th style="width: 8%" class="text-center">
                                Status
                            </th>
                            <th style="width: 20%">
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in CustomerList)
                        {
                            <tr>
                                <td>
                                    #
                                </td>
                                <td>
                                    <a>
                                        @item.Name
                                    </a>
                                    <br />
                                    <small>
                                        Created @item.PhoneNumber.ToString()
                                    </small>
                                </td>
                                <td>
                                    <ul class="list-inline">
                                        @foreach(var account in item.Name)
                                        {
                                        <li class="list-inline-item">
                                            jkjkjkjkk
                                        </li>
                                        }
                                    </ul>
                                </td>
                                <td>
                                    @item.Surname
                                </td>
                                <td class="project-state">
                                    <span class="badge badge-@SetStatusBadge(item.Id)">
                                        @SetStatusValue(item.Id)
                                        </span>
                                </td>
                                <td class="project-actions text-right">
                                    <a class="btn btn-primary btn-sm" href="/customers/@item.Id">
                                        <i class="fas fa-folder">
                                        </i>
                                        View
                                    </a>
                                    <a class="btn btn-info btn-sm" href="#">
                                        <i class="fas fa-pencil-alt">
                                        </i>
                                        Edit
                                    </a>
                                    <a class="btn btn-danger btn-sm" href="#">
                                        <i class="fas fa-trash">
                                        </i>
                                        Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
    </div>
        <!-- /.card -->

</section>
    <!-- /.content -->

}
@code {
    public List<Customer> CustomerList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CustomerList = new List<Customer>();
        var customer1 = new Customer()
            {
                Id = 1,
                Name = "First Customer",
                Surname = "This is my first customer",
                PhoneNumber = 53556653,
            };
        var customer2 = new Customer()
            {
                Id = 2,
                Name = "Second Customer",
                Surname = "This is my second customer",
                PhoneNumber = 86845694,
            };
        //var customer3 = new Customer()
        //    {
        //        Id = 3,
        //        Title = "Third Post",
        //        Body = "This is my third post",
        //        StatusId = 3,
        //        ScheduledDate = DateTime.Now.AddDays(7),
        //        CreateDate = DateTime.Now,
        //        Accounts = new List<Account>() { new Account() { AccountName = "Twitter", Id = 3 } }
        //    };
        CustomerList.Add(customer1);
        CustomerList.Add(customer2);
        //PostList.Add(post3);
    }

    private string SetStatusValue(int statusId)
    {
        string result;
        switch (statusId)
        {
            case 1:
                result = "Posted";
                break;
            case 2:
                result = "Scheduled";
                break;
            default:
                result = "Draft";
                break;
        }
        return result;
    }
        private string SetStatusBadge(int statusId)
    {
        string result;
        switch (statusId)
        {
            case 1:
                result = "success";
                break;
            case 2:
                result = "warning";
                break;
            default:
                result = "secondary";
                break;
        }
        return result;
    }

    public class Customer
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Surname { get; set; }
        public int PhoneNumber { get; set; }
    }

    public class Account
    {
        public int Id { get; set; }
        public string AccountName { get; set; } //Social Media Platform
        public string APIKey { get; set; }
        public string APISecret { get; set; }
    }

}